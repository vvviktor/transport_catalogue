cmake_minimum_required(VERSION 3.10)

project(tcat CXX)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_PREFIX_PATH "/home/kustov/Desktop/Protobuf/protobuf_package/")

find_package(Protobuf REQUIRED)
find_package(Threads REQUIRED)

protobuf_generate_cpp(PROTO_SRCS PROTO_HDRS transport_catalogue.proto map_renderer.proto svg.proto graph.proto transport_router.proto)

set(TRANSPORT_CATALOGUE_FILES transport_catalogue.h transport_catalogue.cpp transport_catalogue.proto 
    map_renderer.proto svg.proto graph.proto transport_router.proto)
set(JSON_FILES json.h json.cpp json_builder.h json_builder.cpp json_reader.h json_reader.cpp)
set(MAP_RENDERER_FILES svg.h svg.cpp map_renderer.h map_renderer.cpp)
set(GEO_FILES geo.h geo.cpp)
set(DOMAIN_FILES domain.h domain.cpp)
set(TRANSPORT_ROUTER_FILES graph.h router.h ranges.h transport_router.h transport_router.cpp)
set(REQUEST_HANDLER_FILES request_handler.h request_handler.cpp)
set(SERIALIZATION_FILES serialization.h serialization.cpp)
set(MAIN_FILES main.cpp)

add_executable(transport_catalogue ${PROTO_SRCS} ${PROTO_HDRS} ${TRANSPORT_CATALOGUE_FILES} ${JSON_FILES} ${MAP_RENDERER_FILES}
               ${GEO_FILES} ${DOMAIN_FILES} ${TRANSPORT_ROUTER_FILES} ${REQUEST_HANDLER_FILES} ${SERIALIZATION_FILES} ${MAIN_FILES})
target_include_directories(transport_catalogue PUBLIC ${Protobuf_INCLUDE_DIRS})
target_include_directories(transport_catalogue PUBLIC ${CMAKE_CURRENT_BINARY_DIR})

string(REPLACE "protobuf.lib" "protobufd.lib" "Protobuf_LIBRARY_DEBUG" "${Protobuf_LIBRARY_DEBUG}")
string(REPLACE "protobuf.a" "protobufd.a" "Protobuf_LIBRARY_DEBUG" "${Protobuf_LIBRARY_DEBUG}")

target_link_libraries(transport_catalogue "$<IF:$<CONFIG:Debug>,${Protobuf_LIBRARY_DEBUG},${Protobuf_LIBRARY_RELEASE}>" Threads::Threads)